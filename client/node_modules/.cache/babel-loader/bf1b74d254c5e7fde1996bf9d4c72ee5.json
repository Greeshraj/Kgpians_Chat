{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GREESHRAJ PATAIRIYA\\\\Desktop\\\\Temp\\\\Kgpian_chat\\\\client\\\\src\\\\components\\\\ScrollableChat.jsx\",\n  _s = $RefreshSig$();\nimport { Avatar, Tooltip } from \"@chakra-ui/react\";\nimport { useEffect, useRef } from \"react\";\nimport Lottie from \"lottie-react\";\nimport \"../App.css\";\nimport { isLastMessage, isSameSender, isSameSenderMargin, isSameUser } from \"../config/ChatLogics\";\nimport { ChatState } from \"../context/ChatProvider\";\nimport typingAnimation from \"../animations/typing.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScrollableChat = _ref => {\n  _s();\n  let {\n    messages,\n    isTyping\n  } = _ref;\n  const {\n    user\n  } = ChatState();\n  const scrollRef = useRef();\n  useEffect(() => {\n    var _scrollRef$current;\n    // Scroll to the bottom when messeges render or sender is typing\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"end\"\n    });\n  }, [messages, isTyping]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hide-scrollbar\",\n      style: {\n        overflowX: \"hidden\",\n        overflowY: \"auto\"\n      },\n      children: messages && messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: scrollRef,\n        style: {\n          display: \"flex\"\n        },\n        children: [(isSameSender(messages, message, index, user._id) || isLastMessage(messages, index, user._id)) && /*#__PURE__*/_jsxDEV(Tooltip, {\n          label: message.sender.name,\n          placement: \"bottom-start\",\n          hasArrow: true,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            mt: \"7px\",\n            mr: \"1\",\n            size: \"sm\",\n            cursor: \"pointer\",\n            name: message.sender.name,\n            src: message.sender.pic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: `${message.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"}`,\n            borderRadius: \"20px\",\n            padding: \"5px 15px\",\n            maxWidth: \"75%\",\n            marginLeft: isSameSenderMargin(messages, message, index, user._id),\n            marginTop: isSameUser(messages, message, index, user._id) ? 3 : 10\n          },\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, message._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), isTyping ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"70px\",\n        marginTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Lottie, {\n        animationData: typingAnimation,\n        loop: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true);\n};\n_s(ScrollableChat, \"P14GFulhWAl/Oec4Pk4QeBwKyr0=\");\n_c = ScrollableChat;\nexport default ScrollableChat;\nvar _c;\n$RefreshReg$(_c, \"ScrollableChat\");","map":{"version":3,"names":["Avatar","Tooltip","useEffect","useRef","Lottie","isLastMessage","isSameSender","isSameSenderMargin","isSameUser","ChatState","typingAnimation","ScrollableChat","messages","isTyping","user","scrollRef","current","scrollIntoView","behavior","block","overflowX","overflowY","map","message","index","display","_id","sender","name","pic","backgroundColor","borderRadius","padding","maxWidth","marginLeft","marginTop","content","width"],"sources":["C:/Users/GREESHRAJ PATAIRIYA/Desktop/Temp/Kgpian_chat/client/src/components/ScrollableChat.jsx"],"sourcesContent":["import { Avatar, Tooltip } from \"@chakra-ui/react\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport Lottie from \"lottie-react\";\r\n\r\nimport \"../App.css\";\r\nimport {\r\n  isLastMessage,\r\n  isSameSender,\r\n  isSameSenderMargin,\r\n  isSameUser,\r\n} from \"../config/ChatLogics\";\r\nimport { ChatState } from \"../context/ChatProvider\";\r\nimport typingAnimation from \"../animations/typing.json\";\r\n\r\nconst ScrollableChat = ({ messages, isTyping }) => {\r\n  const { user } = ChatState();\r\n\r\n  const scrollRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // Scroll to the bottom when messeges render or sender is typing\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\r\n  }, [messages, isTyping]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"hide-scrollbar\"\r\n        style={{ overflowX: \"hidden\", overflowY: \"auto\" }}\r\n      >\r\n        {/* If something inside the messages, render the messages */}\r\n        {messages &&\r\n          messages.map((message, index) => (\r\n            <div ref={scrollRef} key={message._id} style={{ display: \"flex\" }}>\r\n              {(isSameSender(messages, message, index, user._id) ||\r\n                isLastMessage(messages, index, user._id)) && (\r\n                <Tooltip\r\n                  label={message.sender.name}\r\n                  placement=\"bottom-start\"\r\n                  hasArrow\r\n                >\r\n                  <Avatar\r\n                    mt=\"7px\"\r\n                    mr=\"1\"\r\n                    size=\"sm\"\r\n                    cursor=\"pointer\"\r\n                    name={message.sender.name}\r\n                    src={message.sender.pic}\r\n                  />\r\n                </Tooltip>\r\n              )}\r\n\r\n              <span\r\n                style={{\r\n                  backgroundColor: `${\r\n                    message.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\r\n                  }`,\r\n                  borderRadius: \"20px\",\r\n                  padding: \"5px 15px\",\r\n                  maxWidth: \"75%\",\r\n\r\n                  marginLeft: isSameSenderMargin(\r\n                    messages,\r\n                    message,\r\n                    index,\r\n                    user._id\r\n                  ),\r\n                  marginTop: isSameUser(messages, message, index, user._id)\r\n                    ? 3\r\n                    : 10,\r\n                }}\r\n              >\r\n                {message.content}\r\n              </span>\r\n            </div>\r\n          ))}\r\n      </div>\r\n      {isTyping ? (\r\n        <div style={{ width: \"70px\", marginTop: \"5px\" }}>\r\n          <Lottie animationData={typingAnimation} loop={true} />\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScrollableChat;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,OAAO,QAAQ,kBAAkB;AAClD,SAASC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,MAAM,MAAM,cAAc;AAEjC,OAAO,YAAY;AACnB,SACEC,aAAa,EACbC,YAAY,EACZC,kBAAkB,EAClBC,UAAU,QACL,sBAAsB;AAC7B,SAASC,SAAS,QAAQ,yBAAyB;AACnD,OAAOC,eAAe,MAAM,2BAA2B;AAAC;AAAA;AAExD,MAAMC,cAAc,GAAG,QAA4B;EAAA;EAAA,IAA3B;IAAEC,QAAQ;IAAEC;EAAS,CAAC;EAC5C,MAAM;IAAEC;EAAK,CAAC,GAAGL,SAAS,EAAE;EAE5B,MAAMM,SAAS,GAAGZ,MAAM,EAAE;EAE1BD,SAAS,CAAC,MAAM;IAAA;IACd;IACA,sBAAAa,SAAS,CAACC,OAAO,uDAAjB,mBAAmBC,cAAc,CAAC;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAM,CAAC,CAAC;EACzE,CAAC,EAAE,CAACP,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EAExB,oBACE;IAAA,wBACE;MACE,SAAS,EAAC,gBAAgB;MAC1B,KAAK,EAAE;QAAEO,SAAS,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAA,UAGjDT,QAAQ,IACPA,QAAQ,CAACU,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC1B;QAAK,GAAG,EAAET,SAAU;QAAmB,KAAK,EAAE;UAAEU,OAAO,EAAE;QAAO,CAAE;QAAA,WAC/D,CAACnB,YAAY,CAACM,QAAQ,EAAEW,OAAO,EAAEC,KAAK,EAAEV,IAAI,CAACY,GAAG,CAAC,IAChDrB,aAAa,CAACO,QAAQ,EAAEY,KAAK,EAAEV,IAAI,CAACY,GAAG,CAAC,kBACxC,QAAC,OAAO;UACN,KAAK,EAAEH,OAAO,CAACI,MAAM,CAACC,IAAK;UAC3B,SAAS,EAAC,cAAc;UACxB,QAAQ;UAAA,uBAER,QAAC,MAAM;YACL,EAAE,EAAC,KAAK;YACR,EAAE,EAAC,GAAG;YACN,IAAI,EAAC,IAAI;YACT,MAAM,EAAC,SAAS;YAChB,IAAI,EAAEL,OAAO,CAACI,MAAM,CAACC,IAAK;YAC1B,GAAG,EAAEL,OAAO,CAACI,MAAM,CAACE;UAAI;YAAA;YAAA;YAAA;UAAA;QACxB;UAAA;UAAA;UAAA;QAAA,QAEL,eAED;UACE,KAAK,EAAE;YACLC,eAAe,EAAG,GAChBP,OAAO,CAACI,MAAM,CAACD,GAAG,KAAKZ,IAAI,CAACY,GAAG,GAAG,SAAS,GAAG,SAC/C,EAAC;YACFK,YAAY,EAAE,MAAM;YACpBC,OAAO,EAAE,UAAU;YACnBC,QAAQ,EAAE,KAAK;YAEfC,UAAU,EAAE3B,kBAAkB,CAC5BK,QAAQ,EACRW,OAAO,EACPC,KAAK,EACLV,IAAI,CAACY,GAAG,CACT;YACDS,SAAS,EAAE3B,UAAU,CAACI,QAAQ,EAAEW,OAAO,EAAEC,KAAK,EAAEV,IAAI,CAACY,GAAG,CAAC,GACrD,CAAC,GACD;UACN,CAAE;UAAA,UAEDH,OAAO,CAACa;QAAO;UAAA;UAAA;UAAA;QAAA,QACX;MAAA,GAxCiBb,OAAO,CAACG,GAAG;QAAA;QAAA;QAAA;MAAA,QA0CtC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA,EACLb,QAAQ,gBACP;MAAK,KAAK,EAAE;QAAEwB,KAAK,EAAE,MAAM;QAAEF,SAAS,EAAE;MAAM,CAAE;MAAA,uBAC9C,QAAC,MAAM;QAAC,aAAa,EAAEzB,eAAgB;QAAC,IAAI,EAAE;MAAK;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAClD,gBAEN,qCACD;EAAA,gBACA;AAEP,CAAC;AAAC,GAxEIC,cAAc;AAAA,KAAdA,cAAc;AA0EpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module"}