{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GREESHRAJ PATAIRIYA\\\\Desktop\\\\Temp\\\\Kgpian_chat\\\\client\\\\src\\\\components\\\\MyChats.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Box, Button, Stack, Text, useDisclosure, useToast } from \"@chakra-ui/react\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { ChatState } from \"../context/ChatProvider\";\nimport ChatLoading from \"./ChatLoading\";\nimport { getSender } from \"../config/ChatLogics\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChats = _ref => {\n  _s();\n  let {\n    fetchAgain\n  } = _ref;\n  const [loggedUser, setLoggedUser] = useState();\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    chats,\n    setChats\n  } = ChatState();\n  const toast = useToast();\n  const {\n    onClose\n  } = useDisclosure();\n  const fetchChats = async () => {\n    try {\n      const response = await fetch(`/api/chat`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      const data = await response.json();\n      setChats(data);\n      onClose(); // Close the side drawer\n    } catch (error) {\n      return toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n        variant: \"solid\"\n      });\n    }\n  };\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: {\n      base: selectedChat ? \"none\" : \"flex\",\n      md: \"flex\"\n    },\n    flexDir: \"column\",\n    alignItems: \"center\",\n    p: 3,\n    bg: \"white\",\n    w: {\n      base: \"100%\",\n      md: \"31%\"\n    },\n    borderRadius: \"lg\",\n    borderWidth: \"1px\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      pb: 3,\n      px: 3,\n      fontSize: {\n        base: \"28px\",\n        md: \"30px\"\n      },\n      fontFamily: \"Work sans\",\n      display: \"flex\",\n      w: \"100%\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: \"My Chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDir: \"column\",\n      p: 3,\n      bg: \"#F8F8F8\",\n      w: \"100%\",\n      h: \"100%\",\n      borderRadius: \"lg\",\n      overflowY: \"hidden\",\n      children: chats ? /*#__PURE__*/_jsxDEV(Stack, {\n        overflowY: \"scroll\",\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(Box, {\n          onClick: () => setSelectedChat(chat),\n          cursor: \"pointer\",\n          bg: selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\",\n          color: selectedChat === chat ? \"white\" : \"black\",\n          px: 3,\n          py: 2,\n          borderRadius: \"lg\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: !chat.isGroupChat ? getSender(loggedUser, chat.users) : chat.chatName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)\n        }, chat._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ChatLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(MyChats, \"kFeBCw7t0q0z4BZ7QvuMLGqw2+I=\", false, function () {\n  return [useToast, useDisclosure];\n});\n_c = MyChats;\nexport default MyChats;\nvar _c;\n$RefreshReg$(_c, \"MyChats\");","map":{"version":3,"names":["useEffect","useState","Box","Button","Stack","Text","useDisclosure","useToast","AddIcon","ChatState","ChatLoading","getSender","GroupChatModal","MyChats","fetchAgain","loggedUser","setLoggedUser","selectedChat","setSelectedChat","user","chats","setChats","toast","onClose","fetchChats","response","fetch","method","headers","Authorization","token","data","json","error","title","description","status","duration","isClosable","position","variant","JSON","parse","localStorage","getItem","base","md","map","chat","isGroupChat","users","chatName","_id"],"sources":["C:/Users/GREESHRAJ PATAIRIYA/Desktop/Temp/Kgpian_chat/client/src/components/MyChats.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Stack,\r\n  Text,\r\n  useDisclosure,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\n\r\nimport { ChatState } from \"../context/ChatProvider\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport { getSender } from \"../config/ChatLogics\";\r\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\r\n\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n  const toast = useToast();\r\n  const { onClose } = useDisclosure();\r\n\r\n  const fetchChats = async () => {\r\n    try {\r\n      const response = await fetch(`/api/chat`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      });\r\n      const data = await response.json();\r\n\r\n      setChats(data);\r\n      onClose(); // Close the side drawer\r\n    } catch (error) {\r\n      return toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n        variant: \"solid\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n    // eslint-disable-next-line\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n    <Box\r\n      display={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        display=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Chats\r\n        {/* <GroupChatModal>\r\n          <Button\r\n            display=\"flex\"\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            rightIcon={<AddIcon />}\r\n          >\r\n            New Group Chat\r\n          </Button>\r\n        </GroupChatModal> */}\r\n      </Box>\r\n\r\n      <Box\r\n        display=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"#F8F8F8\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"\r\n      >\r\n        {chats ? (\r\n          <Stack overflowY=\"scroll\">\r\n            {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor=\"pointer\"\r\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius=\"lg\"\r\n                key={chat._id}\r\n              >\r\n                <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.users)\r\n                    : chat.chatName}\r\n                </Text>\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}