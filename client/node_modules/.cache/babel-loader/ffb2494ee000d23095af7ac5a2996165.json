{"ast":null,"code":"export var getSender=function getSender(loggedUser,users){return users[0]._id===loggedUser._id?users[1].name:users[0].name;};export var getSenderFull=function getSenderFull(loggedUser,users){return users[0]._id===loggedUser._id?users[1]:users[0];};export var isSameSender=function isSameSender(messages,currentMessage,currentMessageIndex,loggedUserId){return currentMessageIndex<messages.length-1&&(messages[currentMessageIndex+1].sender._id!==currentMessage.sender._id||messages[currentMessageIndex+1].sender._id===undefined)&&messages[currentMessageIndex].sender._id!==loggedUserId;};export var isLastMessage=function isLastMessage(messages,currentMessageIndex,loggedUserId){return currentMessageIndex===messages.length-1&&messages[messages.length-1].sender._id!==loggedUserId&&messages[messages.length-1].sender._id;};export var isSameSenderMargin=function isSameSenderMargin(messages,currentMessage,currentMessageIndex,loggedUserId){if(currentMessageIndex<messages.length-1&&messages[currentMessageIndex+1].sender._id===currentMessage.sender._id&&messages[currentMessageIndex].sender._id!==loggedUserId)return 33;else if(currentMessageIndex<messages.length-1&&messages[currentMessageIndex+1].sender._id!==currentMessage.sender._id&&messages[currentMessageIndex].sender._id!==loggedUserId||currentMessageIndex===messages.length-1&&messages[currentMessageIndex].sender._id!==loggedUserId)return 0;else return\"auto\";};export var isSameUser=function isSameUser(messages,currentMessage,currentMessageIndex){return currentMessageIndex>0&&messages[currentMessageIndex-1].sender._id===currentMessage.sender._id;};","map":{"version":3,"names":["getSender","loggedUser","users","_id","name","getSenderFull","isSameSender","messages","currentMessage","currentMessageIndex","loggedUserId","length","sender","undefined","isLastMessage","isSameSenderMargin","isSameUser"],"sources":["C:/Users/GREESHRAJ PATAIRIYA/Desktop/Temp/Kgpian_chat/client/src/config/ChatLogics.js"],"sourcesContent":["export const getSender = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\r\n};\r\n\r\nexport const getSenderFull = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\r\n};\r\n\r\nexport const isSameSender = (\r\n  messages,\r\n  currentMessage,\r\n  currentMessageIndex,\r\n  loggedUserId\r\n) => {\r\n  return (\r\n    currentMessageIndex < messages.length - 1 &&\r\n    (messages[currentMessageIndex + 1].sender._id !==\r\n      currentMessage.sender._id ||\r\n      messages[currentMessageIndex + 1].sender._id === undefined) &&\r\n    messages[currentMessageIndex].sender._id !== loggedUserId\r\n  );\r\n};\r\n\r\nexport const isLastMessage = (messages, currentMessageIndex, loggedUserId) => {\r\n  return (\r\n    currentMessageIndex === messages.length - 1 &&\r\n    messages[messages.length - 1].sender._id !== loggedUserId &&\r\n    messages[messages.length - 1].sender._id\r\n  );\r\n};\r\n\r\nexport const isSameSenderMargin = (\r\n  messages,\r\n  currentMessage,\r\n  currentMessageIndex,\r\n  loggedUserId\r\n) => {\r\n  if (\r\n    currentMessageIndex < messages.length - 1 &&\r\n    messages[currentMessageIndex + 1].sender._id ===\r\n      currentMessage.sender._id &&\r\n    messages[currentMessageIndex].sender._id !== loggedUserId\r\n  )\r\n    return 33;\r\n  else if (\r\n    (currentMessageIndex < messages.length - 1 &&\r\n      messages[currentMessageIndex + 1].sender._id !==\r\n        currentMessage.sender._id &&\r\n      messages[currentMessageIndex].sender._id !== loggedUserId) ||\r\n    (currentMessageIndex === messages.length - 1 &&\r\n      messages[currentMessageIndex].sender._id !== loggedUserId)\r\n  )\r\n    return 0;\r\n  else return \"auto\";\r\n};\r\n\r\nexport const isSameUser = (messages, currentMessage, currentMessageIndex) => {\r\n  return (\r\n    currentMessageIndex > 0 &&\r\n    messages[currentMessageIndex - 1].sender._id === currentMessage.sender._id\r\n  );\r\n};\r\n"],"mappings":"AAAA,MAAO,IAAMA,UAAS,CAAG,QAAZA,UAAS,CAAIC,UAAU,CAAEC,KAAK,CAAK,CAC9C,MAAOA,MAAK,CAAC,CAAC,CAAC,CAACC,GAAG,GAAKF,UAAU,CAACE,GAAG,CAAGD,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAAGF,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CACxE,CAAC,CAED,MAAO,IAAMC,cAAa,CAAG,QAAhBA,cAAa,CAAIJ,UAAU,CAAEC,KAAK,CAAK,CAClD,MAAOA,MAAK,CAAC,CAAC,CAAC,CAACC,GAAG,GAAKF,UAAU,CAACE,GAAG,CAAGD,KAAK,CAAC,CAAC,CAAC,CAAGA,KAAK,CAAC,CAAC,CAAC,CAC9D,CAAC,CAED,MAAO,IAAMI,aAAY,CAAG,QAAfA,aAAY,CACvBC,QAAQ,CACRC,cAAc,CACdC,mBAAmB,CACnBC,YAAY,CACT,CACH,MACED,oBAAmB,CAAGF,QAAQ,CAACI,MAAM,CAAG,CAAC,GACxCJ,QAAQ,CAACE,mBAAmB,CAAG,CAAC,CAAC,CAACG,MAAM,CAACT,GAAG,GAC3CK,cAAc,CAACI,MAAM,CAACT,GAAG,EACzBI,QAAQ,CAACE,mBAAmB,CAAG,CAAC,CAAC,CAACG,MAAM,CAACT,GAAG,GAAKU,SAAS,CAAC,EAC7DN,QAAQ,CAACE,mBAAmB,CAAC,CAACG,MAAM,CAACT,GAAG,GAAKO,YAAY,CAE7D,CAAC,CAED,MAAO,IAAMI,cAAa,CAAG,QAAhBA,cAAa,CAAIP,QAAQ,CAAEE,mBAAmB,CAAEC,YAAY,CAAK,CAC5E,MACED,oBAAmB,GAAKF,QAAQ,CAACI,MAAM,CAAG,CAAC,EAC3CJ,QAAQ,CAACA,QAAQ,CAACI,MAAM,CAAG,CAAC,CAAC,CAACC,MAAM,CAACT,GAAG,GAAKO,YAAY,EACzDH,QAAQ,CAACA,QAAQ,CAACI,MAAM,CAAG,CAAC,CAAC,CAACC,MAAM,CAACT,GAAG,CAE5C,CAAC,CAED,MAAO,IAAMY,mBAAkB,CAAG,QAArBA,mBAAkB,CAC7BR,QAAQ,CACRC,cAAc,CACdC,mBAAmB,CACnBC,YAAY,CACT,CACH,GACED,mBAAmB,CAAGF,QAAQ,CAACI,MAAM,CAAG,CAAC,EACzCJ,QAAQ,CAACE,mBAAmB,CAAG,CAAC,CAAC,CAACG,MAAM,CAACT,GAAG,GAC1CK,cAAc,CAACI,MAAM,CAACT,GAAG,EAC3BI,QAAQ,CAACE,mBAAmB,CAAC,CAACG,MAAM,CAACT,GAAG,GAAKO,YAAY,CAEzD,MAAO,GAAE,CAAC,IACP,IACFD,mBAAmB,CAAGF,QAAQ,CAACI,MAAM,CAAG,CAAC,EACxCJ,QAAQ,CAACE,mBAAmB,CAAG,CAAC,CAAC,CAACG,MAAM,CAACT,GAAG,GAC1CK,cAAc,CAACI,MAAM,CAACT,GAAG,EAC3BI,QAAQ,CAACE,mBAAmB,CAAC,CAACG,MAAM,CAACT,GAAG,GAAKO,YAAY,EAC1DD,mBAAmB,GAAKF,QAAQ,CAACI,MAAM,CAAG,CAAC,EAC1CJ,QAAQ,CAACE,mBAAmB,CAAC,CAACG,MAAM,CAACT,GAAG,GAAKO,YAAa,CAE5D,MAAO,EAAC,CAAC,IACN,OAAO,MAAM,CACpB,CAAC,CAED,MAAO,IAAMM,WAAU,CAAG,QAAbA,WAAU,CAAIT,QAAQ,CAAEC,cAAc,CAAEC,mBAAmB,CAAK,CAC3E,MACEA,oBAAmB,CAAG,CAAC,EACvBF,QAAQ,CAACE,mBAAmB,CAAG,CAAC,CAAC,CAACG,MAAM,CAACT,GAAG,GAAKK,cAAc,CAACI,MAAM,CAACT,GAAG,CAE9E,CAAC"},"metadata":{},"sourceType":"module"}