{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GREESHRAJ PATAIRIYA\\\\Desktop\\\\Temp\\\\Kgpian_chat\\\\client\\\\src\\\\components\\\\Authentication\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { Button, FormControl, FormLabel, Input, InputGroup, InputRightElement, Stack, useToast } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [show, setShow] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n  const navigate = useNavigate();\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleCredentials = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  const submitHandler = async () => {\n    setLoading(true);\n\n    // If email or password is missing\n    if (!credentials.email || !credentials.password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-right\",\n        variant: \"left-accent\"\n      });\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await fetch(\"/api/user/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: credentials.email,\n          password: credentials.password\n        })\n      });\n      const data = await response.json();\n      toast({\n        title: data.message,\n        status: !data.success ? \"error\" : \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-right\",\n        variant: !data.success ? \"left-accent\" : \"solid\"\n      });\n      if (data.success) {\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n        setLoading(false);\n        navigate(\"/chats\");\n      } else {\n        setLoading(false);\n      }\n    } catch (error) {\n      setLoading(false);\n      return toast({\n        title: \"Internal server error\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-right\",\n        variant: \"solid\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: \"6\",\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: \"5\",\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"email\",\n          value: credentials.email,\n          placeholder: \"Enter Your Email id\",\n          onChange: e => handleCredentials(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: \"5\",\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputRightElement, {\n            w: \"4.5rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: show ? \"text\" : \"password\",\n            name: \"password\",\n            value: credentials.password,\n            placeholder: \"Password\",\n            onChange: e => handleCredentials(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"blue\",\n      width: \"20%\",\n      style: {\n        marginTop: 15\n      },\n      onClick: submitHandler,\n      isLoading: loading,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"NP3ruD1B5MuQFH+0ubDDfUDJo/c=\", false, function () {\n  return [useToast, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Button","FormControl","FormLabel","Input","InputGroup","InputRightElement","Stack","useToast","useState","useNavigate","Login","show","setShow","loading","setLoading","toast","navigate","credentials","setCredentials","email","password","handleCredentials","e","target","name","value","submitHandler","title","status","duration","isClosable","position","variant","response","fetch","method","headers","body","JSON","stringify","data","json","message","success","localStorage","setItem","error","marginTop"],"sources":["C:/Users/GREESHRAJ PATAIRIYA/Desktop/Temp/Kgpian_chat/client/src/components/Authentication/Login.jsx"],"sourcesContent":["import {Button,FormControl,FormLabel,Input,InputGroup,InputRightElement,Stack,useToast} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const toast = useToast();\r\n  const navigate = useNavigate();\r\n\r\n  const [credentials, setCredentials] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleCredentials = (e) => {\r\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n\r\n    // If email or password is missing\r\n    if (!credentials.email || !credentials.password) {\r\n      toast({\r\n        title: \"Please Fill all the Feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-right\",\r\n        variant: \"left-accent\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"/api/user/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: credentials.email,\r\n          password: credentials.password,\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n\r\n      toast({\r\n        title: data.message,\r\n        status: !data.success ? \"error\" : \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-right\",\r\n        variant: !data.success ? \"left-accent\" : \"solid\",\r\n      });\r\n\r\n      if (data.success) {\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n        setLoading(false);\r\n        navigate(\"/chats\");\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      return toast({\r\n        title: \"Internal server error\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-right\",\r\n        variant: \"solid\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack spacing=\"6\">\r\n      <Stack spacing=\"5\">\r\n        <FormControl isRequired>\r\n          <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={credentials.email}\r\n            placeholder=\"Enter Your Email id\"\r\n            onChange={(e) => handleCredentials(e)}\r\n          />\r\n        </FormControl>\r\n      </Stack>\r\n\r\n      <Stack spacing=\"5\">\r\n        <FormControl isRequired>\r\n          <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n          <InputGroup>\r\n            <InputRightElement w=\"4.5rem\">\r\n              {/* <Button h=\"1.75rem\" size=\"sm\" onClick={() => setShow(!show)}>\r\n                {show ? \"Hide\" : \"Show\"}\r\n              </Button> */}\r\n            </InputRightElement>\r\n            <Input\r\n              type={show ? \"text\" : \"password\"}\r\n              name=\"password\"\r\n              value={credentials.password}\r\n              placeholder=\"Password\"\r\n              onChange={(e) => handleCredentials(e)}\r\n            />\r\n          </InputGroup>\r\n        </FormControl>\r\n      </Stack>\r\n\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"20%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={loading}\r\n      >\r\n        Login\r\n      </Button>\r\n\r\n      {/* <Button\r\n        variant=\"solid\"\r\n        colorScheme=\"red\"\r\n        width=\"100%\"\r\n        onClick={() => {\r\n          setCredentials({ email: \"guest@example.com\", password: \"12345678\" });\r\n        }}\r\n      >\r\n        <i\r\n          className=\"fas fa-user-alt\"\r\n          style={{ fontSize: \"15px\", marginRight: 8 }}\r\n        /> Get Guest User Credentials\r\n      </Button> */}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}