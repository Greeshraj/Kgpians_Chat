{"ast":null,"code":"import _toConsumableArray from\"C:/Users/GREESHRAJ PATAIRIYA/Desktop/Temp/Kgpian_chat/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"C:/Users/GREESHRAJ PATAIRIYA/Desktop/Temp/Kgpian_chat/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/GREESHRAJ PATAIRIYA/Desktop/Temp/Kgpian_chat/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/GREESHRAJ PATAIRIYA/Desktop/Temp/Kgpian_chat/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import{ArrowBackIcon}from\"@chakra-ui/icons\";import{Box,FormControl,IconButton,Input,Spinner,Text,useToast}from\"@chakra-ui/react\";import io from\"socket.io-client\";import{ChatState}from\"../context/ChatProvider\";import{getSender,getSenderFull}from\"../config/ChatLogics\";import ProfileModal from\"./miscellaneous/ProfileModal\";import UpdateGroupChatModal from\"./miscellaneous/UpdateGroupChatModal\";import ScrollableChat from\"./ScrollableChat\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ENDPOINT=\"https://kgpianschat.onrender.com\";// const ENDPOINT = \"http://localhost:5000\"; // If you are deploying the app, replace the value with \"https://YOUR_DEPLOYED_APPLICATION_URL\" then run \"npm run build\" to create a production build\nvar socket,selectedChatCompare;var SingleChat=function SingleChat(_ref){var fetchAgain=_ref.fetchAgain,setFetchAgain=_ref.setFetchAgain;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),newMessage=_useState4[0],setNewMessage=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),socketConnected=_useState8[0],setSocketConnected=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),typing=_useState10[0],setTyping=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isTyping=_useState12[0],setIsTyping=_useState12[1];var _ChatState=ChatState(),user=_ChatState.user,selectedChat=_ChatState.selectedChat,setSelectedChat=_ChatState.setSelectedChat,notification=_ChatState.notification,setNotification=_ChatState.setNotification;var toast=useToast();var fetchMessages=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(selectedChat){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.prev=2;setLoading(true);_context.next=6;return fetch(\"/api/message/\".concat(selectedChat._id),{method:\"GET\",headers:{Authorization:\"Bearer \".concat(user.token)}});case 6:response=_context.sent;_context.next=9;return response.json();case 9:data=_context.sent;setMessages(data);setLoading(false);socket.emit(\"join chat\",selectedChat._id);_context.next=19;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](2);setLoading(false);return _context.abrupt(\"return\",toast({title:\"Error Occured!\",description:\"Failed to Load the Messages\",status:\"error\",duration:5000,isClosable:true,position:\"bottom-right\",variant:\"solid\"}));case 19:case\"end\":return _context.stop();}}},_callee,null,[[2,15]]);}));return function fetchMessages(){return _ref2.apply(this,arguments);};}();useEffect(function(){socket=io(ENDPOINT);socket.emit(\"setup\",user);socket.on(\"connected\",function(){return setSocketConnected(true);});socket.on(\"typing\",function(){return setIsTyping(true);});socket.on(\"stop typing\",function(){return setIsTyping(false);});// eslint-disable-next-line\n},[]);useEffect(function(){fetchMessages();// Whenever users switches chat, call the function again\nselectedChatCompare=selectedChat;// eslint-disable-next-line\n},[selectedChat]);useEffect(function(){socket.on(\"message recieved\",function(newMessageRecieved){if(!selectedChatCompare||selectedChatCompare._id!==newMessageRecieved.chat[0]._id){if(!notification.includes(newMessageRecieved)){setNotification([newMessageRecieved].concat(_toConsumableArray(notification)));setFetchAgain(!fetchAgain);// Fetch all the chats again\n}}else{setMessages([].concat(_toConsumableArray(messages),[newMessageRecieved]));}});// eslint-disable-next-line\n});var sendMessage=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e){var response,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(e.key===\"Enter\"&&newMessage)){_context2.next=18;break;}socket.emit(\"stop typing\",selectedChat._id);_context2.prev=2;setNewMessage(\"\");// Clear message field before making API call (won't affect API call as the function is asynchronous)\n_context2.next=6;return fetch(\"/api/message\",{method:\"POST\",headers:{Authorization:\"Bearer \".concat(user.token),\"Content-Type\":\"application/json\"},body:JSON.stringify({content:newMessage,chatId:selectedChat._id})});case 6:response=_context2.sent;_context2.next=9;return response.json();case 9:data=_context2.sent;socket.emit(\"new message\",data);setNewMessage(\"\");setMessages([].concat(_toConsumableArray(messages),[data]));// Add new message with existing messages\n_context2.next=18;break;case 15:_context2.prev=15;_context2.t0=_context2[\"catch\"](2);return _context2.abrupt(\"return\",toast({title:\"Error Occured!\",description:\"Failed to send the Message\",status:\"error\",duration:5000,isClosable:true,position:\"bottom-right\",variant:\"solid\"}));case 18:case\"end\":return _context2.stop();}}},_callee2,null,[[2,15]]);}));return function sendMessage(_x){return _ref3.apply(this,arguments);};}();var typingHandler=function typingHandler(e){setNewMessage(e.target.value);// Typing Indicator Logic\nif(!socketConnected)return;if(!typing){setTyping(true);socket.emit(\"typing\",selectedChat._id);}var lastTypingTime=new Date().getTime();var timerLength=3000;setTimeout(function(){var timeNow=new Date().getTime();var timeDiff=timeNow-lastTypingTime;if(timeDiff>=timerLength&&typing){socket.emit(\"stop typing\",selectedChat._id);setTyping(false);}},timerLength);};return/*#__PURE__*/_jsx(_Fragment,{children:selectedChat?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Text,{fontSize:{base:\"28px\",md:\"30px\"},pb:\"3\",px:\"2\",w:\"100%\",fontFamily:\"Work sans\",display:\"flex\",justifyContent:{base:\"space-between\"},alignItems:\"center\",children:[/*#__PURE__*/_jsx(IconButton,{display:{base:\"flex\",md:\"none\"},icon:/*#__PURE__*/_jsx(ArrowBackIcon,{}),onClick:function onClick(){return setSelectedChat(\"\");}}),!selectedChat.isGroupChat?/*#__PURE__*/_jsxs(_Fragment,{children:[getSender(user,selectedChat.users),/*#__PURE__*/_jsx(ProfileModal,{user:getSenderFull(user,selectedChat.users)})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[selectedChat.chatName.toUpperCase(),/*#__PURE__*/_jsx(UpdateGroupChatModal,{fetchAgain:fetchAgain,setFetchAgain:setFetchAgain,fetchMessages:fetchMessages})]})]}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",flexDir:\"column\",justifyContent:\"flex-end\",p:3,bg:\"#E8E8E8\",w:\"100%\",h:\"100%\",borderRadius:\"lg\",overflowY:\"hidden\",children:[loading?/*#__PURE__*/_jsx(Spinner,{size:\"xl\",w:\"20\",h:\"20\",alignSelf:\"center\",margin:\"auto\"}):/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flexDirection:\"column\",overflowY:\"scroll\",scrollbarWidth:\"none\"},children:/*#__PURE__*/_jsx(ScrollableChat,{messages:messages,isTyping:isTyping})}),/*#__PURE__*/_jsx(FormControl,{mt:\"3\",onKeyDown:function onKeyDown(e){return sendMessage(e);},isRequired:true,children:/*#__PURE__*/_jsx(Input,{variant:\"filled\",bg:\"#E0E0E0\",placeholder:\"Enter a message..\",value:newMessage,onChange:function onChange(e){return typingHandler(e);}})})]})]}):/*#__PURE__*/_jsx(Box,{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",h:\"100%\",children:/*#__PURE__*/_jsx(Text,{fontSize:\"3xl\",pb:\"3\",fontFamily:\"Work sans\",children:\"Click on a user to start chatting\"})})});};export default SingleChat;","map":{"version":3,"names":["useEffect","useState","ArrowBackIcon","Box","FormControl","IconButton","Input","Spinner","Text","useToast","io","ChatState","getSender","getSenderFull","ProfileModal","UpdateGroupChatModal","ScrollableChat","ENDPOINT","socket","selectedChatCompare","SingleChat","fetchAgain","setFetchAgain","messages","setMessages","newMessage","setNewMessage","loading","setLoading","socketConnected","setSocketConnected","typing","setTyping","isTyping","setIsTyping","user","selectedChat","setSelectedChat","notification","setNotification","toast","fetchMessages","fetch","_id","method","headers","Authorization","token","response","json","data","emit","title","description","status","duration","isClosable","position","variant","on","newMessageRecieved","chat","includes","sendMessage","e","key","body","JSON","stringify","content","chatId","typingHandler","target","value","lastTypingTime","Date","getTime","timerLength","setTimeout","timeNow","timeDiff","base","md","isGroupChat","users","chatName","toUpperCase","display","flexDirection","overflowY","scrollbarWidth"],"sources":["C:/Users/GREESHRAJ PATAIRIYA/Desktop/Temp/Kgpian_chat/client/src/components/SingleChat.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  IconButton,\r\n  Input,\r\n  Spinner,\r\n  Text,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport { ChatState } from \"../context/ChatProvider\";\r\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\r\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\r\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\n\r\nconst ENDPOINT=\"https://kgpianschat.onrender.com\"\r\n// const ENDPOINT = \"http://localhost:5000\"; // If you are deploying the app, replace the value with \"https://YOUR_DEPLOYED_APPLICATION_URL\" then run \"npm run build\" to create a production build\r\nlet socket, selectedChatCompare;\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n\r\n  const { user, selectedChat, setSelectedChat, notification, setNotification } =\r\n    ChatState();\r\n  const toast = useToast();\r\n\r\n  const fetchMessages = async () => {\r\n    // If no chat is selected, don't do anything\r\n    if (!selectedChat) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const response = await fetch(`/api/message/${selectedChat._id}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      });\r\n      const data = await response.json();\r\n\r\n      setMessages(data);\r\n      setLoading(false);\r\n\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      return toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-right\",\r\n        variant: \"solid\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMessages(); // Whenever users switches chat, call the function again\r\n    selectedChatCompare = selectedChat;\r\n    // eslint-disable-next-line\r\n  }, [selectedChat]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n      if (\r\n        !selectedChatCompare ||\r\n        selectedChatCompare._id !== newMessageRecieved.chat[0]._id\r\n      ) {\r\n        if (!notification.includes(newMessageRecieved)) {\r\n          setNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain); // Fetch all the chats again\r\n        }\r\n      } else {\r\n        setMessages([...messages, newMessageRecieved]);\r\n      }\r\n    });\r\n\r\n    // eslint-disable-next-line\r\n  });\r\n\r\n  const sendMessage = async (e) => {\r\n    // Check if 'Enter' key is pressed and we have something inside 'newMessage'\r\n    if (e.key === \"Enter\" && newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        setNewMessage(\"\"); // Clear message field before making API call (won't affect API call as the function is asynchronous)\r\n\r\n        const response = await fetch(\"/api/message\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            content: newMessage,\r\n            chatId: selectedChat._id,\r\n          }),\r\n        });\r\n        const data = await response.json();\r\n\r\n        socket.emit(\"new message\", data);\r\n        setNewMessage(\"\");\r\n        setMessages([...messages, data]); // Add new message with existing messages\r\n      } catch (error) {\r\n        return toast({\r\n          title: \"Error Occured!\",\r\n          description: \"Failed to send the Message\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom-right\",\r\n          variant: \"solid\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    // Typing Indicator Logic\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id);\r\n    }\r\n\r\n    let lastTypingTime = new Date().getTime();\r\n    let timerLength = 3000;\r\n\r\n    setTimeout(() => {\r\n      let timeNow = new Date().getTime();\r\n      let timeDiff = timeNow - lastTypingTime;\r\n\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb=\"3\"\r\n            px=\"2\"\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            display=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              display={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {!selectedChat.isGroupChat ? (\r\n              <>\r\n                {getSender(user, selectedChat.users)}\r\n                <ProfileModal user={getSenderFull(user, selectedChat.users)} />\r\n              </>\r\n            ) : (\r\n              <>\r\n                {selectedChat.chatName.toUpperCase()}\r\n                <UpdateGroupChatModal\r\n                  fetchAgain={fetchAgain}\r\n                  setFetchAgain={setFetchAgain}\r\n                  fetchMessages={fetchMessages}\r\n                />\r\n              </>\r\n            )}\r\n          </Text>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n            bg=\"#E8E8E8\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"hidden\"\r\n          >\r\n            {loading ? (\r\n              <Spinner\r\n                size=\"xl\"\r\n                w=\"20\"\r\n                h=\"20\"\r\n                alignSelf=\"center\"\r\n                margin=\"auto\"\r\n              />\r\n            ) : (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  overflowY: \"scroll\",\r\n                  scrollbarWidth: \"none\",\r\n                }}\r\n              >\r\n                <ScrollableChat messages={messages} isTyping={isTyping} />\r\n              </div>\r\n            )}\r\n\r\n            <FormControl mt=\"3\" onKeyDown={(e) => sendMessage(e)} isRequired>\r\n              <Input\r\n                variant=\"filled\"\r\n                bg=\"#E0E0E0\"\r\n                placeholder=\"Enter a message..\"\r\n                value={newMessage}\r\n                onChange={(e) => typingHandler(e)}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          h=\"100%\"\r\n        >\r\n          <Text fontSize=\"3xl\" pb=\"3\" fontFamily=\"Work sans\">\r\n            Click on a user to start chatting\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleChat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}